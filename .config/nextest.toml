# cargo-nextest configuration
# https://nexte.st/book/configuration.html

[profile.default]
# Run tests with up to 8 parallel threads (adjust based on your system)
test-threads = 8

# Set default timeout for tests
slow-timeout = { period = "60s", terminate-after = 2 }
leak-timeout = "100ms"

# Test output settings
success-output = "never"
failure-output = "immediate-final"
status-level = "pass"

[profile.ci]
# CI profile - more conservative settings
test-threads = 4
slow-timeout = { period = "45s", terminate-after = 1 }

# Retry flaky tests in CI
retries = { backoff = "exponential", count = 2, delay = "1s" }

# Generate JUnit report for CI
final-status-level = "flaky"

[profile.default.junit]
path = "target/nextest/junit.xml"

# Test groups - define categories of tests
# Use these with: cargo nextest run -E 'test(pattern)'
#
# Examples:
#   cargo nextest run -E 'test(integration)'     # All integration tests
#   cargo nextest run -E 'test(performance)'     # All performance tests
#   cargo nextest run -E 'not(test(slow))'       # Exclude slow tests
#   cargo nextest run -E 'test(metadata) and test(xattr)'  # Combined filters

# Define test groups by patterns
[profile.default.overrides]
# Integration tests - tend to be slower
filter = 'test(/integration/)'
slow-timeout = { period = "120s", terminate-after = 2 }
threads-required = 1

# Performance tests - very slow
filter = 'test(/performance/)'
slow-timeout = { period = "240s", terminate-after = 2 }
threads-required = 1

# Rsync compatibility tests - may be slow
filter = 'test(/rsync/)'
slow-timeout = { period = "180s", terminate-after = 2 }
threads-required = 1

# End-to-end tests - slowest
filter = 'test(/end_to_end/)'
slow-timeout = { period = "300s", terminate-after = 2 }
threads-required = 1
leak-timeout = "500ms"

[[profile.default.overrides]]
# xattr tests require special filesystem support
filter = 'test(/xattr/)'
threads-required = 1

[[profile.default.overrides]]
# Metadata tests
filter = 'test(/metadata/)'
slow-timeout = { period = "120s", terminate-after = 2 }

