[package]
name = "compio-fs-extended"
version = "0.1.0"
edition = "2021"
rust-version = "1.90.0"
description = "Extended filesystem operations for compio with fadvise, fallocate, symlinks, hardlinks, and xattr support"
license = "MIT"
repository = "https://github.com/jmalicki/arsync"
documentation = "https://docs.rs/compio-fs-extended"
keywords = ["async", "io_uring", "filesystem", "compio", "xattr"]
categories = ["asynchronous", "filesystem"]

[dependencies]
# Core compio dependencies
compio = { version = "0.16", features = ["macros", "dispatcher"] }

# Cross-platform deps
libc = "0.2"

# Error handling
thiserror = "2.0"

# Async utilities
futures = "0.3"

[dev-dependencies]
# Testing dependencies
tempfile = "3.0"
tokio = { version = "1.0", features = ["full"] }
criterion = { version = "0.7", features = ["html_reports"] }
testcontainers = "0.25"

[features]
default = ["cheap_calls_sync"]
# Enable xattr support (requires io_uring opcodes)
xattr = []
# Enable performance metrics
metrics = []
# Enable logging integration
logging = []
# Call cheap metadata syscalls (chmod, chown, utimens) directly instead of spawn_blocking
# These syscalls are typically <1μs, much faster than thread dispatch overhead (~10μs)
# Note: Does NOT include readlinkat - that reads file data, not just metadata
cheap_calls_sync = []

[target.'cfg(target_os = "linux")'.dependencies]
io-uring = "0.7"
nix = { version = "0.28", features = ["fs", "user", "time"] }
xattr = "1.0"

[target.'cfg(any(target_os = "macos", target_os = "ios"))'.dependencies]
nix = { version = "0.28", features = ["fs", "user", "time"] }
xattr = "1.0"

[target.'cfg(target_os = "windows")'.dependencies]
windows-sys = { version = "0.59", features = [
  "Win32_Foundation",
  "Win32_Storage_FileSystem",
  "Win32_System_IO",
] }

# [[bench]]
# name = "copy_file_range_bench"
# harness = false
